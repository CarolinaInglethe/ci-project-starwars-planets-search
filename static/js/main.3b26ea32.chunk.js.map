{"version":3,"sources":["context/MyContext.js","components/Table.jsx","components/Header.jsx","components/Filters.jsx","components/FiltersList.jsx","context/MyProvider.js","App.js","index.js"],"names":["MyContext","createContext","Table","useContext","data","filters","filtered","name","filterByName","undefined","renderData","Object","keys","map","columnData","index","key","filter","planet","includes","infoPlanet","index0","values","info","index1","App","fetchApiPlanets","useEffect","Filters","filterByNamePlanet","setFilters","columnsOptions","useState","column","comparison","value","filtersObj","setFiltersObj","handleClickButtonFilter","a","filterByNumericValues","handleFilters","target","htmlFor","type","id","data-testid","onChange","columns","onClick","FiltersList","setFiltered","className","length","filterArrayRemove","splice","handleClickRemoveFilter","MyProvider","children","setData","setColumnsOptions","useCallback","fetch","then","response","json","results","forEach","obj","residents","resp","fil","Number","console","log","options","indexOf","Provider","valueName","Header","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3b26ea32.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst MyContext = createContext();\n\nexport default MyContext;\n","import React, { useContext } from 'react';\nimport MyContext from '../context/MyContext';\n\nfunction Table() {\n  const { data, filters, filtered } = useContext(MyContext);\n  const { filterByName: { name } } = filters;\n\n  if (data === undefined) {\n    return <h3>Carregando...</h3>;\n  }\n\n  const renderData = (filtered === undefined ? data : filtered);\n\n  return (\n    <div>\n      <p>Tabela</p>\n      <table>\n        <thead>\n          <tr>\n            {\n              Object.keys(data[0]).map((columnData, index) => (\n                <th key={ index }>{columnData}</th>\n              ))\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {\n            renderData.filter((planet) => planet.name.includes(name))\n              .map((infoPlanet, index0) => (\n                <tr key={ index0 }>\n                  {Object.values(infoPlanet).map((info, index1) => (\n                    <td key={ index1 }>\n                      {info}\n                    </td>\n                  ))}\n                </tr>\n              ))\n          }\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nexport default Table;\n","import React, { useContext, useEffect } from 'react';\nimport MyContext from '../context/MyContext';\n\nfunction App() {\n  const { fetchApiPlanets } = useContext(MyContext);\n\n  useEffect(() => {\n    fetchApiPlanets();\n  }, [fetchApiPlanets]);\n\n  return (\n    <header>\n      <h2>StarWars Planets</h2>\n    </header>\n  );\n}\n\nexport default App;\n","import React, { useContext, useState } from 'react';\nimport MyContext from '../context/MyContext';\n\nfunction Filters() {\n  const {\n    data, filterByNamePlanet,\n    filters, setFilters, columnsOptions,\n  } = useContext(MyContext);\n\n  const [filtersObj, setFiltersObj] = useState({\n    column: '',\n    comparison: '',\n    value: '',\n  });\n\n  const handleClickButtonFilter = async () => {\n    // quando clicar em filtrar:\n    await setFilters(\n      { ...filters,\n        filterByNumericValues: [...filters.filterByNumericValues, filtersObj],\n      },\n    );\n  };\n\n  const handleFilters = ({ target }) => {\n    const { name, value } = target;\n    setFiltersObj({ ...filtersObj, [name]: value });\n  };\n\n  // espera o fetch de data\n  if (data === undefined) {\n    return <h3>Carregando...</h3>;\n  }\n\n  return (\n    <form>\n      <label htmlFor=\"filterName\">\n        <input\n          type=\"text\"\n          id=\"filterName\"\n          data-testid=\"name-filter\"\n          onChange={ ({ target }) => filterByNamePlanet(target.value) }\n        />\n      </label>\n\n      {/* Filtragens mais complexas: */}\n      <label htmlFor=\"column\">\n        Filtro de Colunas:\n        <select\n          name=\"column\"\n          id=\"column\"\n          data-testid=\"column-filter\"\n          onChange={ handleFilters }\n        >\n          {\n            columnsOptions.map((columns, index) => (\n              <option\n                key={ index }\n                value={ columns }\n              >\n                { columns }\n              </option>\n            ))\n          }\n        </select>\n      </label>\n\n      <label htmlFor=\"comparison\">\n        Filtro de comparação:\n        <select\n          name=\"comparison\"\n          id=\"comparison\"\n          data-testid=\"comparison-filter\"\n          onChange={ handleFilters }\n        >\n          <option value=\"-\">-</option>\n          <option value=\"maior que\">maior que</option>\n          <option value=\"menor que\">menor que</option>\n          <option value=\"igual a\">igual a</option>\n        </select>\n      </label>\n\n      <label htmlFor=\"value\">\n        Filtrar Valor:\n        <input\n          type=\"number\"\n          name=\"value\"\n          id=\"value\"\n          data-testid=\"value-filter\"\n          onChange={ handleFilters }\n        />\n      </label>\n\n      <button\n        type=\"button\"\n        data-testid=\"button-filter\"\n        onClick={ handleClickButtonFilter }\n      >\n        Filtrar\n\n      </button>\n\n    </form>\n  );\n}\n\nexport default Filters;\n","import React, { useContext } from 'react';\nimport MyContext from '../context/MyContext';\n\nfunction FiltersList() {\n  const { filters, setFilters, setFiltered } = useContext(MyContext);\n  const { filterByNumericValues } = filters;\n\n  const handleClickRemoveFilter = (index, target) => {\n    // remove do estado Context e da tela as informaçoes da filtragem:\n    const filterArrayRemove = filterByNumericValues.splice(index, 1);\n    setFilters({\n      ...filters,\n      filterByNumericValues: [filterArrayRemove],\n    });\n    // remove a filtragem da tabela:\n    setFiltered(undefined);\n    // remove botao:\n  };\n\n  return (\n    <div className=\"filters-list\">\n      {\n        filterByNumericValues.length > 0\n          ? filterByNumericValues.map((filter, index) => (\n            <div key={ index } data-testid=\"filter\">\n              <p>{ filter.column }</p>\n              <p>{ filter.comparison }</p>\n              <p>{ filter.value }</p>\n              <button\n                type=\"button\"\n                onClick={ () => handleClickRemoveFilter(index) }\n              >\n                X\n\n              </button>\n            </div>\n          ))\n          : <p> Filtragens Vazia... </p>\n      }\n    </div>\n  );\n}\n\nexport default FiltersList;\n","import React, { useState, useCallback, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport MyContext from './MyContext';\n\nfunction MyProvider({ children }) {\n  // ESTADOS -------------------------------\n  const [data, setData] = useState();\n\n  const [filters, setFilters] = useState({\n    filterByName: {\n      name: '',\n    },\n    filterByNumericValues: [],\n  });\n\n  const [filtered, setFiltered] = useState();\n\n  const [columnsOptions, setColumnsOptions] = useState([\n    'population',\n    'orbital_period',\n    'diameter',\n    'rotation_period',\n    'surface_water',\n  ]);\n\n  // FETCH PARA API ---------------------------------------\n  const fetchApiPlanets = useCallback(async () => {\n    fetch('https://swapi-trybe.herokuapp.com/api/planets/')\n      .then((response) => response.json())\n      .then((response) => {\n        // remove residents pra ter apenas 13 colunas:\n        response.results.forEach((obj) => delete obj.residents);\n        setData(response.results);\n      });\n  }, []);\n\n  // ----------------------------------------------------------\n\n  // FUNÇAO FILTRA NOME:\n  const filterByNamePlanet = (valueName) => {\n    setFilters({\n      ...filters,\n      filterByName: {\n        name: valueName,\n      },\n    });\n  };\n\n  // GUARDA ARRAY PARA RENDERIZAR DADOS DE PLANETAS ATRAVES DA FILTRAGEM: --------------------------------------------\n  useEffect(() => {\n    if (filters.filterByNumericValues.length > 0) {\n      const { column, value, comparison } = filters.filterByNumericValues[0];\n      switch (comparison) {\n      case 'maior que': {\n        const resp = data.filter((fil) => Number(fil[column]) > Number(value));\n        setData(resp);\n        break;\n      }\n      case 'menor que': {\n        const resp = data.filter((fil) => Number(fil[column]) < Number(value));\n        setData(resp);\n        break;\n      }\n      case 'igual a': {\n        const resp = data.filter((fil) => Number(fil[column]) === Number(value));\n        setData(resp);\n        break;\n      }\n      default: console.log('');\n      }\n    }\n  }, [data, filters.filterByNumericValues]);\n\n  // -------------------------------------------------------\n  // REMOVE COLUNAS OPTIONS DO SELECT JA USADOS\n  useEffect(() => {\n    const options = columnsOptions;\n    filters.filterByNumericValues.forEach(({ column }) => {\n      // indefof retorna indice daquela palavra, e p spclice remove onde esta esse indice e quantas vezes\n      options.splice(options.indexOf(column), 1);\n      setColumnsOptions(options);\n    });\n  }, [columnsOptions, filters.filterByNumericValues]);\n\n  //---------------------------------------------------------\n\n  return (\n    <MyContext.Provider\n      value={ {\n        data,\n        filters,\n        filtered,\n        columnsOptions,\n        setFilters,\n        setFiltered,\n        fetchApiPlanets,\n        filterByNamePlanet,\n      } }\n    >\n      {children}\n    </MyContext.Provider>\n  );\n}\n\nMyProvider.propTypes = {\n  children: propTypes.objectOf(propTypes.any).isRequired,\n};\n\nexport default MyProvider;\n","import React from 'react';\nimport './App.css';\nimport Table from './components/Table';\nimport Header from './components/Header';\nimport Filters from './components/Filters';\nimport FiltersList from './components/FiltersList';\nimport MyProvider from './context/MyProvider';\n\nfunction App() {\n  return (\n    <MyProvider>\n      <Header />\n      <Filters />\n      <FiltersList />\n      <Table />\n    </MyProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />, document.getElementById('root'),\n);\n"],"sourceRoot":""}